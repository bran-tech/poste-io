
replicaCount: 1

image:
  repository: analogic/poste.io
  pullPolicy: IfNotPresent
  #tag: "2.3.12" # Overrides the image tag whose default is the chart appVersion.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

deploy:
  strategy: Recreate # on update the port is already occupied (network: host)
  network:
    hostNetwork: true
    #hostAliases:
    #  - ip: "127.0.0.1"
    #    hostnames:
    #      - "example"
    #      - "example.com"
  mount:
    data:
      mountPath: /data
      volume:
        # this part goes to `spec.template.spec.volumes`
        hostPath:
          path: /var/lib/poste.io/
        # example: reference PVC
        #persistentVolumeClaim:
        #  claimName: poste-io-data
    logs:
      mountPath: /data/log
      volume:
        hostPath:
          path: /var/log/poste.io/
    localtime:
      mountPath: /etc/localtime
      readOnly: true
      volume:
        hostPath:
          path: /etc/localtime

env:
  - name: HTTPS
    value: "OFF"
  - name: HTTP_PORT
    value: "3180"
  - name: HTTPS_PORT
    value: "4433"
  - name: DISABLE_CLAMAV
    value: "TRUE"
  #- name: DISABLE_RSPAMD
  #  value: "TRUE"
  - name: DISABLE_ROUNDCUBE
    value: "FALSE"
  #- name: ELASTICSEARCH
  #  value: "123.123.123.123:9200"

service:
  enabled: true
  type: ClusterIP
  port: 3180

ingress:
  enabled: false
  #className: "nginx"
  #annotations: 
  #  cert-manager.io/cluster-issuer: letsencrypt
  #  acme.cert-manager.io/http01-edit-in-place: "true"
  #hosts:
  #  - host: mail.example.com
  #    paths:
  #      - path: /
  #        pathType: Prefix
  #tls: 
  #  - secretName: poste-io-tls
  #    hosts:
  #    - mail.example.com

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# create PVCs
storage: {}
  #poste-io-data:
  #  accessModes: ["ReadWriteOnce"]
  #  storageClassName: local-data
  #  size: 2Gi
  #  #volumeName: poste-io-data

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 10m
    memory: 200Mi

nodeSelector: {}

tolerations: []

affinity: {}
